"""empty message

Revision ID: b84f66501a04
Revises: 
Create Date: 2019-07-02 11:56:35.389415

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b84f66501a04'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    #op.drop_index('ix_companys_index', table_name='companys')
    #op.drop_table('companys')
    op.alter_column('closeshift', 'close_datetime',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(timezone='UTC'),
               existing_nullable=True)
    op.alter_column('closeshift', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(timezone='UTC'),
               existing_nullable=True)
    op.alter_column('closeshift', 'documentsquantity',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=True)
    op.alter_column('closeshift', 'fiscaldocumentnumber',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('closeshift', 'fiscaldrivereplacerequiredsign',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('closeshift', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               autoincrement=True)
    op.alter_column('closeshift', 'nottransmitteddocumentsdatetime',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(timezone='UTC'),
               existing_nullable=True)
    op.alter_column('closeshift', 'nottransmitteddocumentsquantity',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('closeshift', 'ofdresponsetimeoutsign',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(timezone='UTC'),
               existing_nullable=True)
    op.alter_column('closeshift', 'receiptsquantity',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=True)
    op.create_unique_constraint('_closeshift_uniq', 'closeshift', ['fiscaldrivenumber', 'fiscalsign', 'fiscaldocumentnumber'])
    op.alter_column('openshift', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(timezone='UTC'),
               existing_nullable=True)
    op.alter_column('openshift', 'fiscaldocumentnumber',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('openshift', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               autoincrement=True)
    op.alter_column('openshift', 'open_datetime',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(timezone='UTC'),
               existing_nullable=True)
    op.create_unique_constraint('_openshift_uniq', 'openshift', ['fiscaldrivenumber', 'fiscalsign', 'fiscaldocumentnumber'])
    op.alter_column('receipts', 'bankagentremuneration',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=True)
    op.alter_column('receipts', 'bsocode',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=True)
    op.alter_column('receipts', 'cashtotalsum',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('receipts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(timezone='UTC'),
               existing_nullable=True)
    op.alter_column('receipts', 'ecashtotalsum',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('receipts', 'fiscal_datetime',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(timezone='UTC'),
               existing_nullable=True)
    op.alter_column('receipts', 'fiscaldocumentnumber',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('receipts', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               autoincrement=True)
    op.alter_column('receipts', 'operationtype',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=True)
    op.alter_column('receipts', 'paymentagentremuneration',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=True)
    op.alter_column('receipts', 'receiptcode',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=True)
    op.alter_column('receipts', 'taxationtype',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=True)
    op.alter_column('receipts', 'totalsum',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.create_unique_constraint('_receipts_uniq', 'receipts', ['fiscaldrivenumber', 'fiscalsign', 'fiscaldocumentnumber'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('_receipts_uniq', 'receipts', type_='unique')
    op.alter_column('receipts', 'totalsum',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('receipts', 'taxationtype',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('receipts', 'receiptcode',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('receipts', 'paymentagentremuneration',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('receipts', 'operationtype',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('receipts', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               autoincrement=True)
    op.alter_column('receipts', 'fiscaldocumentnumber',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('receipts', 'fiscal_datetime',
               existing_type=sa.TIMESTAMP(timezone='UTC'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('receipts', 'ecashtotalsum',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('receipts', 'created_at',
               existing_type=sa.TIMESTAMP(timezone='UTC'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('receipts', 'cashtotalsum',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('receipts', 'bsocode',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('receipts', 'bankagentremuneration',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.drop_constraint('_openshift_uniq', 'openshift', type_='unique')
    op.alter_column('openshift', 'open_datetime',
               existing_type=sa.TIMESTAMP(timezone='UTC'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('openshift', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               autoincrement=True)
    op.alter_column('openshift', 'fiscaldocumentnumber',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('openshift', 'created_at',
               existing_type=sa.TIMESTAMP(timezone='UTC'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.drop_constraint('_closeshift_uniq', 'closeshift', type_='unique')
    op.alter_column('closeshift', 'receiptsquantity',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('closeshift', 'ofdresponsetimeoutsign',
               existing_type=sa.TIMESTAMP(timezone='UTC'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('closeshift', 'nottransmitteddocumentsquantity',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('closeshift', 'nottransmitteddocumentsdatetime',
               existing_type=sa.TIMESTAMP(timezone='UTC'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('closeshift', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               autoincrement=True)
    op.alter_column('closeshift', 'fiscaldrivereplacerequiredsign',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('closeshift', 'fiscaldocumentnumber',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('closeshift', 'documentsquantity',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('closeshift', 'created_at',
               existing_type=sa.TIMESTAMP(timezone='UTC'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('closeshift', 'close_datetime',
               existing_type=sa.TIMESTAMP(timezone='UTC'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    #op.create_table('companys',
    #sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    #sa.Column('company_inn', sa.TEXT(), autoincrement=False, nullable=True),
    #sa.Column('company_name', sa.TEXT(), autoincrement=False, nullable=True)
    #)
    #op.create_index('ix_companys_index', 'companys', ['index'], unique=False)
    # ### end Alembic commands ###
